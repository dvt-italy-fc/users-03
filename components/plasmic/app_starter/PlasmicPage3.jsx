// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: fuHHv7AjQ6K6Qz3dKBqbDo
// Component: _UIhzOy9yRKw
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  useCurrentUser
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";
import PageLayout from "../../PageLayout"; // plasmic-import: xKvzzMrOg7y1/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import plasmic_library_tailwind_3_4_colors_css from "../library_tailwind_3_4_color_tokens/plasmic.module.css"; // plasmic-import: 5ZtnypMovRHeeP3YTdPCYL/projectcss
import plasmic_library_tailwind_3_4_number_tokens_css from "../library_tailwind_3_4_number_tokens/plasmic.module.css"; // plasmic-import: 4vjRXvnb4XuY6J15w9oRcQ/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: fuHHv7AjQ6K6Qz3dKBqbDo/projectcss
import sty from "./PlasmicPage3.module.css"; // plasmic-import: _UIhzOy9yRKw/css

createPlasmicElementProxy;

export const PlasmicPage3__VariantProps = new Array();

export const PlasmicPage3__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicPage3__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            plasmic_library_tailwind_3_4_colors_css.plasmic_tokens,
            plasmic_library_tailwind_3_4_number_tokens_css.plasmic_tokens,
            sty.root
          )}
        >
          <PageLayout
            data-plasmic-name={"pageLayout"}
            data-plasmic-override={overrides.pageLayout}
          >
            <DataCtxReader__>
              {$ctx => (
                <Embed
                  data-plasmic-name={"embedHtml"}
                  data-plasmic-override={overrides.embedHtml}
                  className={classNames("__wab_instance", sty.embedHtml)}
                  code={
                    '<div class="myClass">\r\n<!DOCTYPE html # 0> <html><head></head><body><h1>High Level Architecture (HLA) per ServiceNow App Engine</h1>\r\n\r\n<h2>Capitolo 1: Riepilogo del Contesto</h2>\r\n\r\n<p>Il contesto richiede la realizzazione di un <strong>High Level Architecture (HLA)</strong> per implementare due funzionalit\u00e0 specifiche utilizzando <strong>ServiceNow App Engine</strong>:</p>\r\n\r\n<ol>\r\n    <li><strong>Configurare il Single Sign-On (SSO)</strong> con ambiente Microsoft</li>\r\n    <li><strong>Configurare il playbook</strong> all\'interno di ServiceNow App Engine</li>\r\n</ol>\r\n\r\n<p>L\'obiettivo \u00e8 utilizzare esclusivamente componenti <strong>Out of The Box (OOTB)</strong> di ServiceNow App Engine per soddisfare questi requisiti. La soluzione deve essere dettagliata e pensata per <strong>esperti molto junior</strong>, fornendo istruzioni passo-passo su come implementare queste funzionalit\u00e0.</p>\r\n\r\n<h2>Capitolo 2: Analisi di Fattibilit\u00e0 con Componenti OOTB di ServiceNow App Engine</h2>\r\n\r\n<p style="color: green;"><strong>\u2705 \u00c8 possibile realizzare entrambi i requisiti utilizzando componenti Out of The Box di ServiceNow App Engine.</strong></p>\r\n\r\n<table border="1" cellpadding="5" cellspacing="0" width="100%">\r\n    <tbody><tr style="background-color: #f2f2f2;">\r\n        <th>Requisito</th>\r\n        <th>Copertura OOTB</th>\r\n        <th>Descrizione del Gap</th>\r\n        <th>Suggerimenti per colmare il gap</th>\r\n    </tr>\r\n    <tr>\r\n        <td><strong>Configurare il SSO con ambiente Microsoft</strong></td>\r\n        <td style="background-color: #d4edda; text-align: center;"><strong>Completa</strong></td>\r\n        <td>Nessun gap identificato. ServiceNow App Engine supporta nativamente l\'integrazione con Microsoft per SSO.</td>\r\n        <td>Non necessario</td>\r\n    </tr>\r\n    <tr>\r\n        <td><strong>Configurare il playbook</strong></td>\r\n        <td style="background-color: #d4edda; text-align: center;"><strong>Completa</strong></td>\r\n        <td>Nessun gap identificato. ServiceNow App Engine include funzionalit\u00e0 complete per la configurazione di playbook.</td>\r\n        <td>Non necessario</td>\r\n    </tr>\r\n</tbody></table>\r\n\r\n<h3>Dettaglio della fattibilit\u00e0 per SSO con ambiente Microsoft:</h3>\r\n<p>ServiceNow App Engine supporta nativamente l\'integrazione con <strong>Azure Active Directory</strong> per implementare il Single Sign-On. Questo pu\u00f2 essere configurato utilizzando il <strong>protocollo OAuth 2.0</strong> che \u00e8 supportato out-of-the-box.</p>\r\n\r\n<h3>Dettaglio della fattibilit\u00e0 per configurazione playbook:</h3>\r\n<p>ServiceNow App Engine include funzionalit\u00e0 complete per la creazione e gestione di <strong>playbook</strong>. Questi possono essere configurati utilizzando sia la <strong>vista Board</strong> che la <strong>vista Diagram</strong>, permettendo di definire flussi di lavoro, decisioni, attivit\u00e0 parallele e connettori.</p>\r\n\r\n<h2>Capitolo 3: Dettagli Architetturali</h2>\r\n\r\n<h3>Configurazione SSO con ambiente Microsoft</h3>\r\n\r\n<p><strong>Componenti coinvolti:</strong></p>\r\n<ul>\r\n    <li>ServiceNow App Engine<br></li>\r\n    <li>Microsoft Azure Active Directory<br></li>\r\n    <li>OAuth 2.0 Provider<br></li>\r\n</ul>\r\n\r\n<p><strong>Processo di configurazione:</strong></p>\r\n<ol>\r\n    <li><strong>Registrazione dell\'applicazione in Azure AD:</strong><br>\r\n        - Accedere al portale Azure<br>\r\n        - Navigare su "Azure Active Directory" &gt; "Registrazioni app"<br>\r\n        - Creare una nuova registrazione per ServiceNow<br>\r\n        - Configurare l\'URL di reindirizzamento verso l\'istanza ServiceNow<br>\r\n        - Ottenere l\'ID client e il segreto client<br>\r\n    </li>\r\n    <li><strong>Configurazione in ServiceNow:</strong><br>\r\n        - Navigare su "System OAuth" &gt; "Application Registry"<br>\r\n        - Creare una nuova applicazione di tipo "OAuth 2.0"<br>\r\n        - Inserire l\'ID client e il segreto client ottenuti da Azure<br>\r\n        - Configurare l\'endpoint di autorizzazione e token di Azure<br>\r\n        - Testare la connessione<br>\r\n    </li>\r\n    <li><strong>Configurazione dei ruoli e delle autorizzazioni:</strong><br>\r\n        - Definire quali ruoli in ServiceNow possono utilizzare l\'SSO<br>\r\n        - Mappare i gruppi Azure AD ai ruoli ServiceNow<br>\r\n        - Configurare le policy di sicurezza appropriate<br>\r\n    </li>\r\n</ol>\r\n\r\n<p><strong>Dettagli tecnici:</strong></p>\r\n<p>La configurazione dell\'SSO con Microsoft richiede la registrazione di Azure Blob Storage come provider OAuth. Questo processo \u00e8 supportato nativamente da ServiceNow App Engine e richiede i seguenti passaggi specifici:</p>\r\n\r\n<ol>\r\n    <li>Assicurarsi di avere la sottoscrizione Integration Hub<br></li>\r\n    <li>Attivare lo spoke Azure Blob Storage<br></li>\r\n    <li>Disporre di un utente con il ruolo Storage Blob Data Owner in Azure<br></li>\r\n    <li>Configurare l\'accesso tramite il portale Azure assegnando il ruolo appropriato<br></li>\r\n    <li>Registrare Azure Blob Storage come provider OAuth nell\'istanza ServiceNow<br></li>\r\n</ol>\r\n\r\n<h3>Configurazione del Playbook</h3>\r\n\r\n<p><strong>Componenti coinvolti:</strong></p>\r\n<ul>\r\n    <li>ServiceNow App Engine Studio<br></li>\r\n    <li>Creator Studio per la configurazione del playbook<br></li>\r\n    <li>Tabelle di dati per memorizzare le informazioni del playbook<br></li>\r\n    <li>Ruoli e autorizzazioni per l\'accesso al playbook<br></li>\r\n</ul>\r\n\r\n<p><strong>Processo di configurazione:</strong></p>\r\n<ol>\r\n    <li><strong>Creazione dell\'applicazione in App Engine Studio:</strong><br>\r\n        - Navigare su "All &gt; App Engine &gt; App Engine Studio"<br>\r\n        - Creare una nuova applicazione o utilizzare un template esistente<br>\r\n        - Definire le tabelle di dati necessarie per il playbook<br>\r\n    </li>\r\n    <li><strong>Configurazione del playbook in Creator Studio:</strong><br>\r\n        - Utilizzare la vista Diagram per una rappresentazione visiva del flusso<br>\r\n        - Definire il trigger che avvia il playbook<br>\r\n        - Aggiungere attivit\u00e0, decisioni e processi paralleli<br>\r\n        - Configurare i connettori tra le diverse attivit\u00e0<br>\r\n    </li>\r\n    <li><strong>Configurazione della sicurezza:</strong><br>\r\n        - Navigare nella sezione Security dell\'applicazione<br>\r\n        - Selezionare "Build a new role" o utilizzare un ruolo esistente<br>\r\n        - Definire le autorizzazioni per le tabelle (Create, Read, Write, Delete)<br>\r\n        - Assegnare le esperienze accessibili agli utenti con quel ruolo<br>\r\n    </li>\r\n</ol>\r\n\r\n<p><strong>Dettagli tecnici dei playbook:</strong></p>\r\n<p>I playbook in ServiceNow App Engine sono composti da diversi elementi:</p>\r\n\r\n<ul>\r\n    <li><strong>Trigger:</strong> L\'evento che avvia il playbook<br></li>\r\n    <li><strong>Attivit\u00e0:</strong> Azioni che devono essere eseguite nel flusso<br></li>\r\n    <li><strong>Decisioni:</strong> Punti di diramazione basati su condizioni<br></li>\r\n    <li><strong>Branch:</strong> Percorsi distinti che seguono le decisioni<br></li>\r\n    <li><strong>Processi paralleli:</strong> Attivit\u00e0 che possono essere eseguite contemporaneamente<br></li>\r\n    <li><strong>Connettori:</strong> Linee che collegano le attivit\u00e0 e le decisioni<br></li>\r\n</ul>\r\n\r\n<p>ServiceNow App Engine offre due modalit\u00e0 di visualizzazione per i playbook:</p>\r\n<ul>\r\n    <li><strong>Vista Board:</strong> Visualizzazione semplificata delle attivit\u00e0<br></li>\r\n    <li><strong>Vista Diagram:</strong> Diagramma visivamente intuitivo che mostra l\'ordine delle attivit\u00e0. Questa vista \u00e8 necessaria per aggiungere decisioni al playbook.<br></li>\r\n</ul>\r\n\r\n<h2>Capitolo 4: Rappresentazione Grafica dell\'Architettura</h2>\r\n\r\n<h3>Mappa della Soluzione</h3>\r\n\r\n<div style="width: 100%; height: 400px; border: 1px solid #ccc; position: relative;">\r\n    <!-- Azure AD -->\r\n    <div style="position: absolute; top: 50px; left: 50px; width: 200px; height: 100px; background-color: #0078D4; color: white; text-align: center; line-height: 100px; border-radius: 10px;">\r\n        Microsoft Azure AD\r\n    </div>\r\n    \r\n    <!-- ServiceNow App Engine -->\r\n    <div style="position: absolute; top: 50px; right: 50px; width: 200px; height: 300px; background-color: #81B5A1; color: white; border-radius: 10px;">\r\n        <div style="text-align: center; padding: 10px; border-bottom: 1px solid white;">ServiceNow App Engine</div>\r\n        <div style="text-align: center; padding: 10px; background-color: #6A9583; margin: 10px; border-radius: 5px;">OAuth Provider</div>\r\n        <div style="text-align: center; padding: 10px; background-color: #6A9583; margin: 10px; border-radius: 5px;">App Engine Studio</div>\r\n        <div style="text-align: center; padding: 10px; background-color: #6A9583; margin: 10px; border-radius: 5px;">Creator Studio</div>\r\n        <div style="text-align: center; padding: 10px; background-color: #6A9583; margin: 10px; border-radius: 5px;">Playbook Engine</div>\r\n    </div>\r\n    \r\n    <!-- Frecce di connessione -->\r\n    <svg width="100%" height="100%" style="position: absolute; top: 0; left: 0;">\r\n        <!-- Freccia da Azure AD a OAuth Provider -->\r\n        <path d="M 250,100 L 350,100" stroke="#333" stroke-width="2" fill="none" marker-end="url(#arrowhead)"></path>\r\n        <text x="300" y="90" text-anchor="middle" style="font-size: 12px;">SSO</text>\r\n        \r\n        <!-- Definizione della punta della freccia -->\r\n        <defs>\r\n            <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="0" refY="3.5" orient="auto">\r\n                <polygon points="0 0, 10 3.5, 0 7" fill="#333"></polygon>\r\n            </marker>\r\n        </defs>\r\n    </svg>\r\n</div>\r\n\r\n<h3>Diagramma di Flusso per SSO</h3>\r\n\r\n<div style="width: 100%; height: 500px; border: 1px solid #ccc; position: relative;">\r\n    <!-- Fasi del flusso SSO -->\r\n    <div style="position: absolute; top: 50px; left: 50%; transform: translateX(-50%); width: 200px; height: 60px; background-color: #4CAF50; color: white; text-align: center; line-height: 60px; border-radius: 10px;">\r\n        Utente accede all\'app\r\n    </div>\r\n    \r\n    <div style="position: absolute; top: 150px; left: 50%; transform: translateX(-50%); width: 200px; height: 60px; background-color: #2196F3; color: white; text-align: center; line-height: 60px; border-radius: 10px;">\r\n        Redirect a Microsoft\r\n    </div>\r\n    \r\n    <div style="position: absolute; top: 250px; left: 50%; transform: translateX(-50%); width: 200px; height: 60px; background-color: #FF9800; color: white; text-align: center; line-height: 60px; border-radius: 10px;">\r\n        Autenticazione Azure AD\r\n    </div>\r\n    \r\n    <div style="position: absolute; top: 350px; left: 50%; transform: translateX(-50%); width: 200px; height: 60px; background-color: #9C27B0; color: white; text-align: center; line-height: 60px; border-radius: 10px;">\r\n        Token OAuth restituito\r\n    </div>\r\n    \r\n    <div style="position: absolute; top: 450px; left: 50%; transform: translateX(-50%); width: 200px; height: 60px; background-color: #E91E63; color: white; text-align: center; line-height: 60px; border-radius: 10px;">\r\n        Accesso completato\r\n    </div>\r\n    \r\n    <!-- Frecce di connessione -->\r\n    <svg width="100%" height="100%" style="position: absolute; top: 0; left: 0;">\r\n        <line x1="50%" y1="110" x2="50%" y2="150" stroke="#333" stroke-width="2" stroke-dasharray="5,5"></line>\r\n        <line x1="50%" y1="210" x2="50%" y2="250" stroke="#333" stroke-width="2" stroke-dasharray="5,5"></line>\r\n        <line x1="50%" y1="310" x2="50%" y2="350" stroke="#333" stroke-width="2" stroke-dasharray="5,5"></line>\r\n        <line x1="50%" y1="410" x2="50%" y2="450" stroke="#333" stroke-width="2" stroke-dasharray="5,5"></line>\r\n    </svg>\r\n</div>\r\n\r\n<h3>Diagramma di Flusso per Playbook</h3>\r\n\r\n<div style="width: 100%; height: 500px; border: 1px solid #ccc; position: relative;">\r\n    <!-- Trigger -->\r\n    <div style="position: absolute; top: 50px; left: 50%; transform: translateX(-50%); width: 150px; height: 60px; background-color: #4CAF50; color: white; text-align: center; line-height: 60px; border-radius: 10px;">\r\n        Trigger\r\n    </div>\r\n    \r\n    <!-- Decisione -->\r\n    <div style="position: absolute; top: 150px; left: 50%; transform: translateX(-50%); width: 150px; height: 60px; background-color: #FFC107; color: white; text-align: center; line-height: 60px; border-radius: 10px; transform: rotate(45deg);">\r\n        <div style="transform: rotate(-45deg);">Decisione</div>\r\n    </div>\r\n    \r\n    <!-- Branch 1 -->\r\n    <div style="position: absolute; top: 250px; left: 30%; transform: translateX(-50%); width: 150px; height: 60px; background-color: #2196F3; color: white; text-align: center; line-height: 60px; border-radius: 10px;">\r\n        Branch 1\r\n    </div>\r\n    \r\n    <!-- Branch 2 -->\r\n    <div style="position: absolute; top: 250px; left: 70%; transform: translateX(-50%); width: 150px; height: 60px; background-color: #2196F3; color: white; text-align: center; line-height: 60px; border-radius: 10px;">\r\n        Branch 2\r\n    </div>\r\n    \r\n    <!-- Attivit\u00e0 Parallele -->\r\n    <div style="position: absolute; top: 350px; left: 50%; transform: translateX(-50%); width: 200px; height: 60px; background-color: #9C27B0; color: white; text-align: center; line-height: 60px; border-radius: 10px;">\r\n        Processi Paralleli\r\n    </div>\r\n    \r\n    <!-- Fine -->\r\n    <div style="position: absolute; top: 450px; left: 50%; transform: translateX(-50%); width: 150px; height: 60px; background-color: #E91E63; color: white; text-align: center; line-height: 60px; border-radius: 10px;">\r\n        Fine\r\n    </div>\r\n    \r\n    <!-- Frecce di connessione -->\r\n    <svg width="100%" height="100%" style="position: absolute; top: 0; left: 0;">\r\n        <line x1="50%" y1="110" x2="50%" y2="150" stroke="#333" stroke-width="2"></line>\r\n        <line x1="50%" y1="210" x2="30%" y2="250" stroke="#333" stroke-width="2"></line>\r\n        <line x1="50%" y1="210" x2="70%" y2="250" stroke="#333" stroke-width="2"></line>\r\n        <line x1="30%" y1="310" x2="50%" y2="350" stroke="#333" stroke-width="2"></line>\r\n        <line x1="70%" y1="310" x2="50%" y2="350" stroke="#333" stroke-width="2"></line>\r\n        <line x1="50%" y1="410" x2="50%" y2="450" stroke="#333" stroke-width="2"></line>\r\n    </svg>\r\n</div>\r\n\r\n<h3>Tabella delle Componenti</h3>\r\n\r\n<table border="1" cellpadding="5" cellspacing="0" width="100%">\r\n    <tbody><tr style="background-color: #f2f2f2;">\r\n        <th>Componente</th>\r\n        <th>Descrizione</th>\r\n        <th>Interazioni</th>\r\n    </tr>\r\n    <tr>\r\n        <td><strong>Microsoft Azure AD</strong></td>\r\n        <td>Servizio di gestione delle identit\u00e0 e degli accessi di Microsoft che fornisce l\'autenticazione per il SSO.</td>\r\n        <td>Interagisce con ServiceNow tramite il protocollo OAuth 2.0 per autenticare gli utenti.</td>\r\n    </tr>\r\n    <tr>\r\n        <td><strong>OAuth Provider</strong></td>\r\n        <td>Componente di ServiceNow che gestisce l\'autenticazione OAuth con Azure AD.</td>\r\n        <td>Riceve le richieste di autenticazione e gestisce i token OAuth per l\'accesso degli utenti.</td>\r\n    </tr>\r\n    <tr>\r\n        <td><strong>App Engine Studio</strong></td>\r\n        <td>Ambiente di sviluppo low-code per creare applicazioni in ServiceNow.</td>\r\n        <td>Utilizzato per creare l\'applicazione e definire le tabelle di dati necessarie per il playbook.</td>\r\n    </tr>\r\n    <tr>\r\n        <td><strong>Creator Studio</strong></td>\r\n        <td>Componente per la creazione e gestione dei playbook in ServiceNow.</td>\r\n        <td>Permette di definire trigger, attivit\u00e0, decisioni e flussi di lavoro del playbook.</td>\r\n    </tr>\r\n    <tr>\r\n        <td><strong>Playbook Engine</strong></td>\r\n        <td>Motore di esecuzione che gestisce l\'esecuzione dei playbook configurati.</td>\r\n        <td>Esegue le attivit\u00e0 definite nel playbook in base ai trigger e alle condizioni specificate.</td>\r\n    </tr>\r\n    <tr>\r\n        <td><strong>Tabelle di Dati</strong></td>\r\n        <td>Strutture di dati che memorizzano le informazioni necessarie per il funzionamento del playbook.</td>\r\n        <td>Memorizzano dati di configurazione, stati e risultati delle attivit\u00e0 del playbook.</td>\r\n    </tr>\r\n    <tr>\r\n        <td><strong>Ruoli e Autorizzazioni</strong></td>\r\n        <td>Definiscono chi pu\u00f2 accedere e utilizzare il playbook e con quali permessi.</td>\r\n        <td>Controllano l\'accesso alle funzionalit\u00e0 del playbook in base ai ruoli assegnati agli utenti.</td>\r\n    </tr>\r\n</tbody></table>\r\n\r\n<h3>Matrice delle Integrazioni</h3>\r\n\r\n<table border="1" cellpadding="5" cellspacing="0" width="100%">\r\n    <tbody><tr style="background-color: #f2f2f2;">\r\n        <th>Da</th>\r\n        <th>A</th>\r\n        <th>Tipo di Connessione</th>\r\n        <th>Protocollo</th>\r\n        <th>Dati Scambiati</th>\r\n    </tr>\r\n    <tr>\r\n        <td>Utente</td>\r\n        <td>ServiceNow App Engine</td>\r\n        <td>Accesso Web</td>\r\n        <td>HTTPS</td>\r\n        <td>Richiesta di accesso</td>\r\n    </tr>\r\n    <tr>\r\n        <td>ServiceNow App Engine</td>\r\n        <td>Microsoft Azure AD</td>\r\n        <td>Redirect per autenticazione</td>\r\n        <td>OAuth 2.0</td>\r\n        <td>Richiesta di autenticazione</td>\r\n    </tr>\r\n    <tr>\r\n        <td>Microsoft Azure AD</td>\r\n        <td>ServiceNow App Engine</td>\r\n        <td>Callback di autenticazione</td>\r\n        <td>OAuth 2.0</td>\r\n        <td>Token di accesso, informazioni utente</td>\r\n    </tr>\r\n    <tr>\r\n        <td>App Engine Studio</td>\r\n        <td>Creator Studio</td>\r\n        <td>Integrazione interna</td>\r\n        <td>API interne</td>\r\n        <td>Definizione dell\'applicazione, tabelle di dati</td>\r\n    </tr>\r\n    <tr>\r\n        <td>Creator Studio</td>\r\n        <td>Playbook Engine</td>\r\n        <td>Integrazione interna</td>\r\n        <td>API interne</td>\r\n        <td>Configurazione del playbook</td>\r\n    </tr>\r\n    <tr>\r\n        <td>Playbook Engine</td>\r\n        <td>Tabelle di Dati</td>\r\n        <td>Accesso al database</td>\r\n        <td>SQL interno</td>\r\n        <td>Lettura/scrittura dati del playbook</td>\r\n    </tr>\r\n</tbody></table>\r\n\r\n<h3>Rappresentazione Testuale della Logica Operativa</h3>\r\n\r\n<div style="background-color: #f9f9f9; padding: 20px; border-left: 5px solid #4CAF50; font-family: monospace;">\r\n<pre style="white-space: pre-wrap;"><strong>Processo di SSO con Microsoft Azure AD:</strong>\r\n\r\n1. Utente accede all\'URL dell\'applicazione ServiceNow\r\n2. ServiceNow verifica se l\'utente \u00e8 gi\u00e0 autenticato\r\n   2.1. Se non autenticato, redirect a Microsoft Azure AD\r\n   2.2. Se gi\u00e0 autenticato, accesso diretto all\'applicazione\r\n3. Microsoft Azure AD richiede le credenziali all\'utente\r\n4. Utente inserisce le credenziali in Azure AD\r\n5. Azure AD verifica le credenziali\r\n   5.1. Se valide, genera un token OAuth\r\n   5.2. Se non valide, mostra errore di autenticazione\r\n6. Azure AD effettua il redirect a ServiceNow con il token\r\n7. ServiceNow verifica il token con Azure AD\r\n8. ServiceNow mappa l\'utente Azure ai ruoli interni\r\n9. ServiceNow concede l\'accesso all\'applicazione\r\n\r\n<strong>Processo di esecuzione del Playbook:</strong>\r\n\r\n1. Un evento trigger avvia il playbook\r\n2. Il Playbook Engine carica la configurazione del playbook\r\n3. Esecuzione della prima attivit\u00e0 del playbook\r\n4. Valutazione delle condizioni di decisione\r\n   4.1. Se condizione A, esecuzione Branch 1\r\n   4.2. Se condizione B, esecuzione Branch 2\r\n5. Esecuzione di eventuali processi paralleli\r\n6. Raccolta dei risultati di tutte le attivit\u00e0\r\n7. Completamento del playbook\r\n8. Aggiornamento dello stato nelle tabelle di dati\r\n</pre>\r\n</div></body></html>\r\n<! SLIDES []--> \r\n</div>'
                  }
                />
              )}
            </DataCtxReader__>
          </PageLayout>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "pageLayout", "embedHtml"],
  pageLayout: ["pageLayout", "embedHtml"],
  embedHtml: ["embedHtml"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicPage3__ArgProps,
          internalVariantPropNames: PlasmicPage3__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicPage3__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPage3";
  } else {
    func.displayName = `PlasmicPage3.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth(WrappedComponent) {
  const WithUsePlasmicAuthComponent = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "fuHHv7AjQ6K6Qz3dKBqbDo"
    });
    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicPage3 = Object.assign(
  // Top-level PlasmicPage3 renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    pageLayout: makeNodeComponent("pageLayout"),
    embedHtml: makeNodeComponent("embedHtml"),
    // Metadata about props expected for PlasmicPage3
    internalVariantProps: PlasmicPage3__VariantProps,
    internalArgProps: PlasmicPage3__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicPage3;
/* prettier-ignore-end */
